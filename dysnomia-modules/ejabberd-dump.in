#!/bin/bash
set -e
set -o pipefail
shopt -s nullglob

# Autoconf settings
export prefix=@prefix@

# Import utility functions
source @datadir@/@PACKAGE@/util

determineComponentName $2
checkStateDir
determineTypeIdentifier $0
composeSnapshotsPath
composeGarbagePath
composeGenerationsPath

ejabberdctl='@ejabberdctl@ --config-dir /var/ejabberd --logs /var/log/ejabberd --spool /var/lib/ejabberd'

case "$1" in
    activate)
        # Wait until the ejabberd daemon is available
        count=0
        while ! $ejabberdctl status
        do
            if [ $count -eq 30 ]
            then
                echo "Tried 30 times, giving up..."
                exit 1
            fi
            
            echo "Ejabberd daemon not yet started. Waiting for 1 second..."
            count=$((count++))
            sleep 1
        done
        
        # Load the dump
        if [ -f $2 ]
        then
            $ejabberdctl load $2
        elif [ -d $2 ]
        then
            $ejabberdctl load $2/ejabberd-dump/*
        fi
        
        unmarkStateAsGarbage
        ;;
    deactivate)
        markStateAsGarbage
        ;;
    snapshot)
        tmpdir=$(mktemp -d)
        cd $tmpdir
        
        $ejabberdctl dump $tmpdir/dump
        
        hash=$(cat dump | sha256sum)
        hash=${hash:0:64}
        
        if [ -d $snapshotsPath/$hash ]
        then
            rm -Rf $tmpdir
        else
            mkdir -p $snapshotsPath/$hash
            mv dump $snapshotsPath/$hash
            rmdir $tmpdir
        fi
        createGenerationSymlink $snapshotsPath/$hash
        ;;
    restore)
        determineLastSnapshot
        
        if [ "$lastSnapshot" != "" ]
        then
            $ejabberdctl load $snapshotsPath/$lastSnapshot/dump
        fi
        ;;
    collect-garbage)
        if [ -f $garbagePath ]
        then
            rm -Rf /var/lib/ejabberd
            rm -Rf /var/ejabberd
            rm -Rf /var/log/ejabberd
            unmarkStateAsGarbage
        fi
        ;;
esac
