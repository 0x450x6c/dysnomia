#!/bin/bash
set -e
set -o pipefail

# Dysnomia module that simply echos the activity that is being executed.

case "$1" in
    # Executes all steps necessary to activate a service. It returns a zero
    # exit status in case of success.
    activate)
        echo "Echo module: Activate service: $2"
        ;;

    # Executes all steps necessary to deactivate a service. It returns a zero
    # exit status in case of success.
    deactivate)
        echo "Echo module: Deactivate service: $2"
        ;;

    # Notifies a service that an upgrade is performed. A service can use this to
    # take precautions or to reach quiescence. It can also reject the upgrade by
    # returning a non-zero exit status.
    lock)
        echo "Echo module: Lock service: $2"
        ;;

    # Notifies a service that an upgrade has finished. A services can use this
    # to resume its normal operations.
    unlock)
        echo "Echo module: Unlock service: $2"
        ;;
    
    # Snapshots the corresponding state of the service in a preferably consistent
    # and portable manner in a special purpose folder with a naming strategy.
    snapshot)
        echo "Echo module: Snapshot state of service: $2"
        ;;
    
    # Restores the state of the service from the special purpose folder with a
    # naming strategy.
    restore)
        echo "Echo module: Restore state of service: $2"
        ;;
    
    # Collects the garbage of the service by permanently removing it
    collect-garbage)
        echo "Echo module: Collect garbage of service: $2"
        ;;

    # Script that gets executed when spawning a shell session. It is typically
    # used to provide usage instructions to the user.
    shell)
        echo "This is the echo shell session" >&2
        ;;
esac

# Print the environment variables

echo "Environment variables:"
set
