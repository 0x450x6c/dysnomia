#!/bin/bash
set -e
set -o pipefail
shopt -s nullglob

# Manages the deployment lifecycle of a Mongo database.
#
# On activation, an initial dump can be restored. If the mutable component
# contains a sub folder named mongo-databases/, then the dump files stored
# inside get imported.
#
# This module also support snapshotting. It uses the output hash of the dump to
# uniquely identify each snapshot.

# Autoconf settings
export prefix=@prefix@

# Import utility functions
source @datadir@/@PACKAGE@/util

determineComponentName $2
checkStateDir
determineTypeIdentifier $0
determineContainerName $3
composeSnapshotsPath
composeGarbagePath
composeGenerationsPath

case "$1" in
    activate)
        # Nothing needs to be done to create a mongo database. It gets created
        # automatically once an object is saved.
        
        if [ -d $2/mongo-databases ] && [ "$((echo "use $componentName;"; echo "show collections;") | @mongo@ | grep -x 'system.indexes')" = "" ]
        then
            ( echo "use $componentName;"
              cat $2/mongo-databases/*
            ) | @mongo@
        fi
        
        unmarkStateAsGarbage
        ;;
        
    deactivate)
        markStateAsGarbage
        ;;
    snapshot)
        tmpdir=$(mktemp -d)
        cd $tmpdir
        
        @mongodump@ -d $componentName -o .
        hash=$((for i in $componentName/*; do echo $i; cat $i; done) | sha256sum)
        hash=${hash:0:64}
        
        if [ -d $snapshotsPath/$hash ]
        then
            rm -Rf $tmpdir
        else
            mkdir -p $snapshotsPath/$hash
            mv $componentName $snapshotsPath/$hash
            rmdir $tmpdir
        fi
        createGenerationSymlink $hash
        ;;
    restore)
        determineLastSnapshot
        
        if [ "$lastSnapshot" != "" ]
        then
            @mongorestore@ --drop -d $componentName $snapshotsPath/$lastSnapshot/$componentName
        fi
        ;;
    collect-garbage)
        if [ -f $garbagePath ]
        then
            ( echo "use $componentName;"
              echo "db.dropDatabase();"
            ) | @mongo@
            
            unmarkStateAsGarbage
        fi
        ;;
esac
