#!/bin/bash
set -e
set -o pipefail

# Autoconf settings
export prefix=@prefix@

# Import utility functions
source @datadir@/@PACKAGE@/util

serviceName=$(basename $2)

# Open container configuration file if it exists
if [ -f "$2/etc/wrapper_config" ]
then
    source $2/etc/wrapper_config
fi

case "$1" in
    activate)
        createUnprivilegedUserAndGroup
        
        if [ "@job_template@" = "systemd" ]
        then
            mkdir -p @systemd_rundir@/system
            
            # Systemd activation
            sed -e "s|@name@|disnix-$serviceName|" \
                -e "s|@description@|$serviceName|" \
                -e "s|@wrapper@|$(echo $2/bin/wrapper)|" \
                -e "s|@""systemd_path@|@systemd_path@|" \
                @datadir@/@PACKAGE@/wrapper.template.systemd > @systemd_rundir@/system/disnix-$serviceName.service
            
            addUserSettingsToSystemdConfig @systemd_rundir@/system/disnix-$serviceName.service
            if [ -f $2/etc/systemd-config ]
            then
                cat $2/etc/systemd-config >> @systemd_rundir@/system/disnix-$serviceName.service
            fi
        
            systemctl --system daemon-reload
            systemctl start disnix-$serviceName.service || (rm -f disnix-$serviceName.service; removeUnprivilegedUserAndGroup; false)
        elif [ "@job_template@" = "init.d" ]
        then
            runProcess="$(echo $2/bin/wrapper)"
            
            if [ "$container_username" != "" ]
            then
                runProcess="su $container_username -c \"$runProcess\""
            fi
            
            # init.d activation
            sed -e "s|@name@|disnix-$serviceName|" \
                -e "s|@description@|$serviceName|" \
                -e "s|@process@|$runProcess|" \
                @datadir@/@PACKAGE@/wrapper.template.initd > @sysvinit_initd_dir@/$serviceName
                
                @sysvinit_initd_dir@/$serviceName start || (removeUnprivilegedUserAndGroup; false)
        else
            # Direct activation
            
            if [ "$container_username" = "" ]
            then
                $2/bin/wrapper activate
            else
                su $container_username -c "$2/bin/wrapper activate" || (removeUnprivilegedUserAndGroup; false)
            fi
        fi
        ;;
    
    deactivate)
        if [ "@job_template@" = "systemd" ]
        then
            if [ -e @systemd_rundir@/system/disnix-$serviceName.service ]
            then
                # Systemd deactivation
                systemctl stop disnix-$serviceName.service
            fi
        elif [ "@job_template@" = "init.d" ]
        then
            if [ -e @sysvinit_initd_dir@/$serviceName ]
            then
                # init.d deactivation
                @sysvinit_initd_dir@/$serviceName stop
            fi
        else
            # Direct deactivation
            
            if [ "$container_username" = "" ]
            then
                $2/bin/wrapper deactivate
            else
                su $container_username -c "$2/bin/wrapper deactivate"
            fi
        fi
        
        attemptSeveralTimes removeUnprivilegedUserAndGroup 10
        
        if [ "@job_template@" = "systemd" ] && [ -e @systemd_rundir@/system/disnix-$serviceName.service ]
        then
            # systemd cleanup
            rm @systemd_rundir@/system/disnix-$serviceName.service
            systemctl --system daemon-reload
        elif [ "@job_template@" = "init.d" ]
        then
            # init.d cleanup
            rm @sysvinit_initd_dir@/$serviceName
        fi
        ;;
    
    lock)
        if [ "$container_username" = "" ]
        then
            $2/bin/wrapper lock
        else
            su $container_username -c "$2/bin/wrapper lock"
        fi
        ;;
    
    unlock)
        if [ "$container_username" = "" ]
        then
            $2/bin/wrapper unlock
        else
            su $container_username -c "$2/bin/wrapper unlock"
        fi
        ;;
    snapshot)
        $2/bin/wrapper snapshot
        ;;
    restore)
        $2/bin/wrapper restore
        ;;
    collect-garbage)
        $2/bin/wrapper collect-garbage
        ;;
esac
