#!/bin/bash -e

# Autoconf settings
export prefix=@prefix@

# Import access control
source @datadir@/@PACKAGE@/access

serviceName=$(basename $2)

# Open container configuration file if it exists
if [ -f "$2/etc/wrapper_config" ]
then
    source $2/etc/wrapper_config
fi

case "$1" in
    activate)
        createUnprivilegedUserAndGroup
        
        if [ "@job_template@" = "systemd" ]
        then
            # Systemd activation
            sed -e "s|@name@|disnix-$serviceName|" \
                -e "s|@description@|$serviceName|" \
                -e "s|@wrapper@|$(echo $2/bin/wrapper)|" \
                -e "s|@""systemd_path@|@systemd_path@|" \
                @datadir@/@PACKAGE@/wrapper.template.systemd > @systemd_rundir@/system/disnix-$serviceName.service
            
            addUserSettingsToSystemdConfig @systemd_rundir@/system/disnix-$serviceName.service
            if [ -f $2/etc/systemd-config ]
            then
                cat $2/etc/systemd-config >> /run/systemd/system/disnix-$serviceName.service
            fi
        
            systemctl --system daemon-reload
            systemctl start disnix-$serviceName.service || (removeUnprivilegedUserAndGroup; false)
        elif [ "@job_template@" = "init.d" ]
        then
            runProcess="$(echo $2/bin/wrapper)"
            
            if [ "$container_username" != "" ]
            then
                runProcess="su $container_username -c \"$runProcess\""
            fi
            
            # init.d activation
            sed -e "s|@name@|disnix-$serviceName|" \
                -e "s|@description@|$serviceName|" \
                -e "s|@process@|$runProcess|" \
                @datadir@/@PACKAGE@/wrapper.template.initd > @sysvinit_initd_dir@/$serviceName
                
                @sysvinit_initd_dir@/$serviceName start || (removeUnprivilegedUserAndGroup; false)
        else
            # Direct activation
            
            if [ "$container_username" = "" ]
            then
                $2/bin/wrapper activate
            else
                su $container_username -c "$2/bin/wrapper activate" || (removeUnprivilegedUserAndGroup; false)
            fi
        fi
        ;;
    
    deactivate)
        if [ "@job_template@" = "systemd" ]
        then
            # Systemd deactivation
            systemctl stop disnix-$serviceName.service
            rm @systemd_rundir@/system/disnix-$serviceName.service
            systemctl --system daemon-reload
        elif [ "@job_template@" = "init.d" ]
        then
            # init.d deactivation
            @sysvinit_initd_dir@/$serviceName stop
            rm -f @sysvinit_initd_dir@/$serviceName
        else
            # Direct deactivation
            
            if [ "$container_username" = "" ]
            then
                $2/bin/wrapper deactivate
            else
                su $container_username -c "$2/bin/wrapper deactivate"
            fi
        fi
        
        removeUnprivilegedUserAndGroup
        ;;
esac
